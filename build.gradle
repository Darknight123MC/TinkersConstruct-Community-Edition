plugins {
    id 'net.minecraftforge.gradle' version '5.+'
}

version = '1.0'
group = 'slimeknights' // http://maven.apache.org/guides/mini/guide-naming-conventions.html

java {
    archivesBaseName = 'TConstructCE'
    toolchain.languageVersion = JavaLanguageVersion.of(8)
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    //mappings channel: '@MAPPING_CHANNEL@', version: '@MAPPING_VERSION@'
    mappings channel: 'stable', version: '39-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
    maven { // TOP
        name 'tterrag maven'
        url "https://maven.tterrag.com/"
    }
    maven { // compatlayer
        name 'K-4u maven'
        url "https://maven.k-4u.nl/"
    }
    maven {
        name 'forge'
        url 'https://files.minecraftforge.net/maven'
    }
    maven {
        name "Tehnut Maven FS"
        url "https://maven.tehnut.info"
    }
    maven {
        name = "CoFH Maven"
        url = "https://maven.covers1624.net"
    }
    maven { // Quark and ARL
        name = "BlameJared"
        url = "https://maven.blamejared.com"
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'

    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    implementation fg.deobf("slimeknights.mantle:Mantle:1.12-1.3.3.49")

    // compile against the JEI API
    implementation fg.deobf("mezz.jei:jei_1.12.2:4.15.+:api")
    // at runtime, use the full JEI jar
    runtimeOnly "mezz.jei:jei_1.12.2:4.15.+"

    implementation fg.deobf("mcp.mobius.waila:Hwyla:1.8.26-B41_1.12.2")
    implementation fg.deobf("mcjty.theoneprobe:TheOneProbe-1.12:1.12-1.4.12-6")
    implementation fg.deobf("cofh:RedstoneFlux:1.12-2.0.0.+:universal")

    //deobfCompile "vazkii.autoreglib:AutoRegLib:${config.arl_version}"
    implementation fg.deobf("vazkii.quark:Quark:r1.6-178.754:api")

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": "tconstruct-ce",
                "Specification-Vendor": "ProjectCE",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"ProjectCE",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}